{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 26);\n  }\n}\nconst _c0 = function () {\n  return [\"forgotPassword\"];\n};\nexport class LoginComponent {\n  constructor(formBuilder, toastr, authService, router) {\n    this.formBuilder = formBuilder;\n    this.toastr = toastr;\n    this.authService = authService;\n    this.router = router;\n    this.showResult = false;\n    this.showPassword = false;\n    this.thirPartyLogin = true;\n  }\n  ngOnInit() {\n    this.formGroup = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n  onShowPasswordClick() {\n    this.showPassword = !this.showPassword;\n  }\n  onReset() {\n    this.formGroup.reset();\n  }\n  login() {\n    this.authService.login(this.formGroup.value.username, this.formGroup.value.password).subscribe({\n      next: () => {\n        if (this.authService.getRole() === 'admin') {\n          this.toastr.success('success', 'Login Successful');\n          this.router.navigate(['/admin']);\n        } else if (this.authService.getRole() === 'teacher') {\n          this.router.navigate(['/teacher']);\n        } else {\n          this.toastr.success('success', 'Login Successful');\n          this.router.navigate(['/']);\n        }\n      },\n      error: error => {\n        console.log('Login failed:', error);\n        this.toastr.error('Invalid Login Credentials', 'Enter Correct User Name and Password');\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  inputs: {\n    thirPartyLogin: \"thirPartyLogin\"\n  },\n  decls: 34,\n  vars: 6,\n  consts: [[\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"login-bg\", \"auth-full-height\", \"d-flex\", \"flex-row\", \"align-items-center\"], [1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-4\"], [1, \"card\"], [1, \"card-body\"], [1, \"m-2\"], [1, \"d-flex\", \"justify-content-center\", \"mt-3\"], [1, \"text-center\", \"logo\"], [\"alt\", \"logo\", \"src\", \"../../../assets/images/1decision-logo.jpg\", 1, \"img-fluid\", 2, \"height\", \"70px\"], [1, \"text-center\", \"mt-3\"], [1, \"fw-bolder\"], [1, \"text-muted\"], [3, \"formGroup\", \"submit\"], [1, \"form-group\", \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\", \"no-validation-icon\", \"no-success-validation\"], [1, \"mb-3\"], [1, \"form-label\", \"d-flex\", \"justify-content-between\"], [1, \"text-primary\", \"font\", 3, \"routerLink\"], [1, \"form-group\", \"input-affix\", \"flex-column\"], [1, \"d-none\"], [\"minlength\", \"8\", \"formControlName\", \"password\", 1, \"form-control\", \"no-validation-icon\", \"no-success-validation\", 3, \"type\"], [1, \"suffix-icon\", \"feather\", \"cursor-pointer\", \"text-dark\", 3, \"ngClass\", \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\"], [1, \"alert\", \"alert-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoginComponent_div_0_Template, 1, 0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"div\", 8)(9, \"div\", 9);\n      i0.ɵɵelement(10, \"img\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 11)(12, \"h3\", 12);\n      i0.ɵɵtext(13, \"Sign In\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\", 13);\n      i0.ɵɵtext(15, \"Sign in your account to continue\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"form\", 14);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_16_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(17, \"div\", 15)(18, \"label\", 16);\n      i0.ɵɵtext(19, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 18)(22, \"label\", 19)(23, \"span\");\n      i0.ɵɵtext(24, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"a\", 20);\n      i0.ɵɵtext(26, \"Forgot Password?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"div\", 21)(28, \"label\", 22);\n      i0.ɵɵtext(29, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 23);\n      i0.ɵɵelementStart(31, \"i\", 24);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_i_click_31_listener() {\n        return ctx.onShowPasswordClick();\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"button\", 25);\n      i0.ɵɵtext(33, \"Log In\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.showResult);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c0));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", ctx.showPassword ? \"icon-eye-off\" : \"icon-eye\");\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgIf, i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinLengthValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","LoginComponent","constructor","formBuilder","toastr","authService","router","ngOnInit","formGroup","group","username","required","password","onShowPasswordClick","showPassword","onReset","reset","login","value","subscribe","next","getRole","success","navigate","error","console","log","selectors","inputs","thirPartyLogin","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Applications/Angular/Upwork/Angular_QuizApp/src/app/users/login/login.component.ts","/Applications/Angular/Upwork/Angular_QuizApp/src/app/users/login/login.component.html"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr'; \n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  formGroup: FormGroup;\n  showResult = false;\n  showPassword = false;\n\n  @Input() thirPartyLogin = true\n\n  constructor(private formBuilder: FormBuilder,private toastr: ToastrService, private authService: AuthService, private router: Router) { }\n  ngOnInit() {\n    this.formGroup = this.formBuilder.group({\n      username: ['', [\n        Validators.required\n      ]],\n      password: ['', [\n        Validators.required\n      ]]\n    });\n  }\n\n  onShowPasswordClick() {\n    this.showPassword = !this.showPassword\n  }\n\n  onReset() {\n    this.formGroup.reset();\n  }\n\n  login() {\n    this.authService.login(this.formGroup.value.username, this.formGroup.value.password).subscribe({\n      next: () => {\n        if (this.authService.getRole() === 'admin') {\n          this.toastr.success('success', 'Login Successful');\n          this.router.navigate(['/admin']);\n        } else if (this.authService.getRole() === 'teacher') {\n          this.router.navigate(['/teacher']);\n        } else {\n          this.toastr.success('success', 'Login Successful');\n          this.router.navigate(['/']);\n        }\n      },\n      error: (error) => {\n        console.log('Login failed:', error);\n        this.toastr.error('Invalid Login Credentials', 'Enter Correct User Name and Password');\n      }\n    });\n  }\n}\n","<div class=\"alert alert-danger\" *ngIf=\"showResult\">\n\n</div>\n<div class=\"login-bg auth-full-height d-flex flex-row align-items-center\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-4\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <div class=\"m-2\">\n                            <div class=\"d-flex justify-content-center mt-3\">\n                                <div class=\"text-center logo\">\n                                    <img alt=\"logo\" class=\"img-fluid\" src=\"../../../assets/images/1decision-logo.jpg\"\n                                        style=\"height: 70px;\">\n                                </div>\n                            </div>\n                            <div class=\"text-center mt-3\">\n                                <h3 class=\"fw-bolder\">Sign In</h3>\n                                <p class=\"text-muted\">Sign in your account to continue</p>\n                            </div>\n                            <form [formGroup]=\"formGroup\" (submit)=\"login()\">\n                                <div class=\"form-group mb-3\">\n                                    <label class=\"form-label\">Username</label>\n                                    <input type=\"text\" \n                                    class=\"form-control no-validation-icon no-success-validation\" formControlName=\"username\">\n                                </div>\n                                <div class=\"mb-3\">\n                                    <label class=\"form-label d-flex justify-content-between\">\n                                        <span>Password</span>\n                                        <a class=\"text-primary font\" [routerLink]=\"['forgotPassword']\">Forgot Password?</a>\n                                    </label>\n                                    <div class=\"form-group input-affix flex-column\">\n                                        <label class=\"d-none\">Password</label>\n                                        <input [type]=\"showPassword ? 'text' : 'password'\" \n                                            class=\"form-control no-validation-icon no-success-validation\" minlength=\"8\" formControlName=\"password\">\n                                        <i class=\"suffix-icon feather cursor-pointer text-dark\" \n                                            [ngClass]=\"showPassword ? 'icon-eye-off' : 'icon-eye'\"  (click)=\"onShowPasswordClick()\">\n                                        </i>\n                                    </div>\n                                </div>\n                                <button type=\"submit\" class=\"btn btn-primary w-100\" >Log In</button>\n                            </form>\n                            <!-- <div class=\"text-center mt-4\">\n                                <p class=\"text-muted\">Don't have an account yet? <a [routerLink]=\"['register']\">Sign Up</a></p>\n                            </div> -->\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}