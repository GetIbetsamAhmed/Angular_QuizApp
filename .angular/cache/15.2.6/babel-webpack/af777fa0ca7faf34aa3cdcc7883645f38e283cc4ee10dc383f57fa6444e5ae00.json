{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/admin.service\";\nimport * as i2 from \"ng-apexcharts\";\nconst _c0 = [\"teacherData\"];\nconst _c1 = [\"studentsTests\"];\nexport class AdminDashboardComponent {\n  constructor(adminService) {\n    this.adminService = adminService;\n    this.data = null;\n    this.PieChartOptions = {\n      series: [44, 55, 50],\n      chart: {\n        width: 400,\n        type: \"pie\"\n      },\n      title: {\n        text: \"Total Number Of Students\",\n        align: 'left',\n        margin: 0,\n        offsetX: 0,\n        offsetY: 0,\n        floating: false,\n        style: {\n          fontSize: '14px',\n          fontWeight: 'bold',\n          fontFamily: \"Inter\",\n          color: '#000'\n        }\n      },\n      labels: [\"Student 1\", \"Student 2\", \"Student 3\"],\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200\n          },\n          dropShadow: {\n            enabled: true,\n            left: 2,\n            top: 2,\n            opacity: 0.5\n          },\n          legend: {\n            show: true,\n            showForSingleSeries: false,\n            showForNullSeries: true,\n            showForZeroSeries: true,\n            position: 'bottom',\n            horizontalAlign: 'center',\n            floating: false,\n            fontSize: '14px',\n            fontFamily: 'Inter, Arial',\n            fontWeight: 400,\n            formatter: undefined,\n            inverseOrder: false,\n            width: undefined,\n            height: undefined,\n            tooltipHoverFormatter: undefined,\n            customLegendItems: [],\n            offsetX: 0,\n            offsetY: 0,\n            itemMargin: {\n              horizontal: 5,\n              vertical: 0\n            },\n            onItemClick: {\n              toggleDataSeries: true\n            },\n            onItemHover: {\n              highlightDataSeries: true\n            }\n          },\n          stroke: {\n            width: [0, 2, 5],\n            curve: 'smooth'\n          }\n        }\n      }]\n    };\n    this.barChartOptions = {\n      plotOptions: {\n        bar: {\n          columnWidth: '50%'\n        }\n      },\n      stroke: {\n        width: [0, 2, 5],\n        curve: 'smooth'\n      },\n      chart: {\n        height: 310,\n        type: 'line',\n        stacked: false\n      },\n      fill: {\n        opacity: [0.85, 0.25, 1],\n        gradient: {\n          inverseColors: false,\n          shade: 'light',\n          type: \"vertical\",\n          opacityFrom: 0.85,\n          opacityTo: 0.55,\n          stops: [0, 100, 100, 100]\n        }\n      },\n      tooltip: {\n        shared: true,\n        intersect: false,\n        y: {\n          formatter: function (y) {\n            if (typeof y !== \"undefined\") {\n              return y.toFixed(0) + \" Tests\";\n            }\n            return y;\n          }\n        }\n      },\n      legend: {\n        show: true,\n        showForSingleSeries: false,\n        showForNullSeries: true,\n        showForZeroSeries: true,\n        position: 'bottom',\n        horizontalAlign: 'center',\n        floating: false,\n        fontSize: '14px',\n        fontFamily: 'Inter, Arial',\n        fontWeight: 400,\n        formatter: undefined,\n        inverseOrder: false,\n        width: undefined,\n        height: undefined,\n        tooltipHoverFormatter: undefined,\n        customLegendItems: [],\n        offsetX: 0,\n        offsetY: 0,\n        itemMargin: {\n          horizontal: 5,\n          vertical: 0\n        },\n        onItemClick: {\n          toggleDataSeries: true\n        },\n        onItemHover: {\n          highlightDataSeries: true\n        }\n      },\n      series: [{\n        name: 'Series Column',\n        type: 'column',\n        data: [23, 110, 22, 27, 13, 22, 100, 21, 44, 22, 30]\n      }, {\n        name: 'Series Area',\n        type: 'area',\n        data: [44, 110, 41, 100, 22, 43, 21, 41, 56, 27, 43]\n      }, {\n        name: 'Series Line',\n        type: 'line',\n        data: [30, 110, 36, 30, 45, 100, 64, 52, 59, 36, 39]\n      }],\n      dataLabels: {\n        enabled: false\n      },\n      title: {\n        text: \"Total Number Of Tests Taken\",\n        align: \"left\"\n      },\n      grid: {\n        row: {\n          colors: [\"#f3f3f3\", \"transparent\"],\n          opacity: 0.5\n        }\n      },\n      xaxis: {\n        categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\"]\n      },\n      yaxis: {\n        title: {\n          text: 'Tests'\n        },\n        min: 0\n      }\n    };\n  }\n  ngOnInit() {\n    this.getTeachersList();\n    this.getSchoolsList();\n  }\n  getTeachersList() {\n    this.adminService.get('teachers').subscribe({\n      next: response => {\n        this.teacherData = response;\n      }\n    });\n  }\n  getSchoolsList() {\n    this.adminService.get('schools').subscribe({\n      next: response => {\n        this.schoolsList = response;\n      }\n    });\n  }\n}\nAdminDashboardComponent.ɵfac = function AdminDashboardComponent_Factory(t) {\n  return new (t || AdminDashboardComponent)(i0.ɵɵdirectiveInject(i1.AdminService));\n};\nAdminDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminDashboardComponent,\n  selectors: [[\"app-admin-dashboard\"]],\n  viewQuery: function AdminDashboardComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pieChart = _t.first);\n    }\n  },\n  decls: 66,\n  vars: 24,\n  consts: [[1, \"row\", \"mb15\"], [1, \"col-xs-8\", \"col-8\", \"col-md-9\", \"form-group\"], [1, \"col-xs-4\", \"col-4\", \"col-md-3\", \"form-group\"], [\"type\", \"text\", \"placeholder\", \"Daterangepicker\", \"bsDaterangepicker\", \"\", 1, \"form-control\"], [1, \"col-lg-3\"], [1, \"card\"], [1, \"card-body\"], [1, \"d-flex\", \"align-items-center\", \"justify-content-between\"], [1, \"feather\", \"icon-edit\"], [1, \"text-primary\", \"fw-bold\", \"card-numbers\"], [\"id\", \"monthly-revenue\", 1, \"mt-4\", 2, \"max-width\", \"250px\"], [1, \"text-warning\", \"fw-bold\", \"card-numbers\"], [1, \"feather\", \"icon-users\"], [1, \"text-success\", \"fw-bold\", \"card-numbers\"], [1, \"text-danger\", \"fw-bold\", \"card-numbers\"], [1, \"col-xs-6\", \"col-6\", \"col-md-6\"], [\"id\", \"teacherData\"], [3, \"series\", \"chart\", \"xaxis\", \"dataLabels\", \"grid\", \"stroke\", \"title\", \"legend\", \"plotOptions\", \"fill\", \"tooltip\", \"yaxis\"], [\"id\", \"studentsTests\"], [3, \"series\", \"stroke\", \"title\", \"chart\", \"plotOptions\", \"tooltip\", \"labels\", \"responsive\"]],\n  template: function AdminDashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n      i0.ɵɵtext(3, \"Dashboard\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 0)(7, \"div\", 4)(8, \"div\", 5)(9, \"div\", 6)(10, \"div\", 7)(11, \"div\")(12, \"h1\");\n      i0.ɵɵelement(13, \"i\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"h3\");\n      i0.ɵɵtext(15, \"Total Tests\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 9);\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(18, \"div\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"div\", 5)(21, \"div\", 6)(22, \"div\", 7)(23, \"div\")(24, \"h1\");\n      i0.ɵɵelement(25, \"i\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"h3\");\n      i0.ɵɵtext(27, \"Total Teachers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 11);\n      i0.ɵɵtext(29);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(30, \"div\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"div\", 4)(32, \"div\", 5)(33, \"div\", 6)(34, \"div\", 7)(35, \"div\")(36, \"h1\");\n      i0.ɵɵelement(37, \"i\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"h3\");\n      i0.ɵɵtext(39, \"Total Schools\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(40, \"div\", 13);\n      i0.ɵɵtext(41);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(42, \"div\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(43, \"div\", 4)(44, \"div\", 5)(45, \"div\", 6)(46, \"div\", 7)(47, \"div\")(48, \"h1\");\n      i0.ɵɵelement(49, \"i\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"h3\");\n      i0.ɵɵtext(51, \"Total Students\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(52, \"div\", 14);\n      i0.ɵɵtext(53);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(54, \"div\", 10);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(55, \"div\", 0)(56, \"div\", 15)(57, \"div\", 5)(58, \"div\", 6)(59, \"div\", 16);\n      i0.ɵɵelement(60, \"apx-chart\", 17);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(61, \"div\", 15)(62, \"div\", 5)(63, \"div\", 6)(64, \"div\", 18);\n      i0.ɵɵelement(65, \"apx-chart\", 19);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵtextInterpolate(ctx.testsData ? ctx.testsData.length : \"0\");\n      i0.ɵɵadvance(12);\n      i0.ɵɵtextInterpolate(ctx.teacherData ? ctx.teacherData.length : \"0\");\n      i0.ɵɵadvance(12);\n      i0.ɵɵtextInterpolate(ctx.schoolsList ? ctx.schoolsList.length : \"0\");\n      i0.ɵɵadvance(12);\n      i0.ɵɵtextInterpolate(ctx.totalStudents ? ctx.totalStudents.length : \"0\");\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"series\", ctx.barChartOptions.series)(\"chart\", ctx.barChartOptions.chart)(\"xaxis\", ctx.barChartOptions.xaxis)(\"dataLabels\", ctx.barChartOptions.dataLabels)(\"grid\", ctx.barChartOptions.grid)(\"stroke\", ctx.barChartOptions.stroke)(\"title\", ctx.barChartOptions.title)(\"legend\", ctx.barChartOptions.legend)(\"plotOptions\", ctx.barChartOptions.plotOptions)(\"fill\", ctx.barChartOptions.fill)(\"tooltip\", ctx.barChartOptions.tooltip)(\"yaxis\", ctx.barChartOptions.yaxis);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"series\", ctx.PieChartOptions.series)(\"stroke\", ctx.PieChartOptions.stroke)(\"title\", ctx.PieChartOptions.title)(\"chart\", ctx.PieChartOptions.chart)(\"plotOptions\", ctx.barChartOptions.plotOptions)(\"tooltip\", ctx.barChartOptions.tooltip)(\"labels\", ctx.PieChartOptions.labels)(\"responsive\", ctx.PieChartOptions.responsive);\n    }\n  },\n  dependencies: [i2.ChartComponent],\n  styles: [\"#TeachersData[_ngcontent-%COMP%] {\\n  max-width: 650px;\\n  margin: 35px auto;\\n}\\n\\n#chart[_ngcontent-%COMP%] {\\n  max-width: 650px;\\n  margin: 35px auto;\\n}\\n#studentsTests[_ngcontent-%COMP%] {\\n  max-width: 380px;\\n  margin: 35px auto;\\n  padding: 0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vYWRtaW4tZGFzaGJvYXJkL2FkbWluLWRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsVUFBVTtBQUNaIiwic291cmNlc0NvbnRlbnQiOlsiI1RlYWNoZXJzRGF0YSB7XG4gIG1heC13aWR0aDogNjUwcHg7XG4gIG1hcmdpbjogMzVweCBhdXRvO1xufVxuXG4jY2hhcnQge1xuICBtYXgtd2lkdGg6IDY1MHB4O1xuICBtYXJnaW46IDM1cHggYXV0bztcbn1cbiNzdHVkZW50c1Rlc3RzIHtcbiAgbWF4LXdpZHRoOiAzODBweDtcbiAgbWFyZ2luOiAzNXB4IGF1dG87XG4gIHBhZGRpbmc6IDA7XG59XG5cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["AdminDashboardComponent","constructor","adminService","PieChartOptions","series","chart","width","type","title","text","align","margin","offsetX","offsetY","floating","style","fontSize","fontWeight","fontFamily","color","labels","responsive","breakpoint","options","dropShadow","enabled","left","top","opacity","legend","show","showForSingleSeries","showForNullSeries","showForZeroSeries","position","horizontalAlign","formatter","undefined","inverseOrder","height","tooltipHoverFormatter","customLegendItems","itemMargin","horizontal","vertical","onItemClick","toggleDataSeries","onItemHover","highlightDataSeries","stroke","curve","barChartOptions","plotOptions","bar","columnWidth","stacked","fill","gradient","inverseColors","shade","opacityFrom","opacityTo","stops","tooltip","shared","intersect","y","toFixed","name","data","dataLabels","grid","row","colors","xaxis","categories","yaxis","min","ngOnInit","getTeachersList","getSchoolsList","get","subscribe","next","response","teacherData","schoolsList","selectors","viewQuery","i0"],"sourceRoot":"","sources":["/Applications/Angular/Upwork/Angular_QuizApp/src/app/admin/admin-dashboard/admin-dashboard.component.ts","/Applications/Angular/Upwork/Angular_QuizApp/src/app/admin/admin-dashboard/admin-dashboard.component.html"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { ApexPlotOptions, ChartComponent } from 'ng-apexcharts/public_api';\nimport {\n  ApexNonAxisChartSeries,\n  ApexResponsive,\n  ApexChart\n} from \"ng-apexcharts\";\nimport { AdminService } from 'src/app/services/admin.service';\n\n\nexport type barChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  dataLabels: ApexDataLabels;\n  grid: ApexGrid;\n  stroke: ApexStroke;\n  title: ApexTitleSubtitle;\n  legend:ApexLegend,\n  plotOptions:ApexPlotOptions\n  fill:ApexFill\n  marker:ApexMarkers;\n  tooltip:ApexTooltip;\n  yaxis:ApexYAxis;\n};\nexport type PieChartOptions = {\n  series: ApexNonAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  title: ApexTitleSubtitle;\n  plotOptions:ApexPlotOptions \n  stroke: ApexStroke;\n  marker:ApexMarkers;\n  tooltip:ApexTooltip;\n  responsive: ApexResponsive[];\n  labels: any;\n};\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent {\n  @ViewChild(\"teacherData\") chart: ChartComponent;\n  public barChartOptions: Partial<barChartOptions>;\n\n  @ViewChild(\"studentsTests\") pieChart: ChartComponent;\n  public PieChartOptions: Partial<PieChartOptions>;\n  data: any = null;  \n  teacherData: any[]; \n  schoolsList:any[];\n  testsData:any[];\n  totalStudents:any[];\n\n  constructor(private adminService : AdminService) {\n    this.PieChartOptions = {\n      series: [44, 55, 50],\n      chart: {\n        width: 400,\n        type: \"pie\"\n      },\n      title: {\n        text: \"Total Number Of Students\",\n        align: 'left',\n        margin: 0,\n        offsetX: 0,\n        offsetY: 0,\n        floating: false,\n        style: {\n          fontSize:  '14px',\n          fontWeight:  'bold',\n          fontFamily:  \"Inter\",\n          color:  '#000'\n        },\n    },\n      labels: [\"Student 1\", \"Student 2\", \"Student 3\"],\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            dropShadow: {\n              enabled: true,\n              left: 2,\n              top: 2,\n              opacity: 0.5\n          },\n            legend:{\n              show: true,\n              showForSingleSeries: false,\n              showForNullSeries: true,\n              showForZeroSeries: true,\n              position: 'bottom',\n              horizontalAlign: 'center',\n              floating: false,\n              fontSize: '14px',\n              fontFamily: 'Inter, Arial',\n              fontWeight: 400,\n              formatter: undefined,\n              inverseOrder: false,\n              width: undefined,\n              height: undefined,\n              tooltipHoverFormatter: undefined,\n              customLegendItems: [],\n              offsetX: 0,\n              offsetY: 0,\n              itemMargin: {\n                  horizontal: 5,\n                  vertical: 0\n              },\n              onItemClick: {\n                  toggleDataSeries: true\n              },\n              onItemHover: {\n                  highlightDataSeries: true\n              },\n            },\n            stroke: {\n              width: [0, 2, 5],\n              curve: 'smooth'\n            },\n          }\n        }\n      ]\n    };\n    \n    this.barChartOptions = {\n      plotOptions: {\n        bar: {\n          columnWidth: '50%'\n        }\n      },\n      stroke: {\n        width: [0, 2, 5],\n        curve: 'smooth'\n      },\n      chart: {\n        height: 310,\n        type: 'line',\n        stacked: false,\n      },\n      fill: {\n        opacity: [0.85,0.25,1],\n\t\t\t\tgradient: {\n\t\t\t\t\tinverseColors: false,\n\t\t\t\t\tshade: 'light',\n\t\t\t\t\ttype: \"vertical\",\n\t\t\t\t\topacityFrom: 0.85,\n\t\t\t\t\topacityTo: 0.55,\n\t\t\t\t\tstops: [0, 100, 100, 100]\n\t\t\t\t}\n      },\n      tooltip: {\n        shared: true,\n        intersect: false,\n        y: {\n          formatter: function (y) {\n            if(typeof y !== \"undefined\") {\n              return  y.toFixed(0) + \" Tests\";\n            }\n            return y;\n\n          }\n        }\n      },\n      legend:{\n        show: true,\n        showForSingleSeries: false,\n        showForNullSeries: true,\n        showForZeroSeries: true,\n        position: 'bottom',\n        horizontalAlign: 'center',\n        floating: false,\n        fontSize: '14px',\n        fontFamily: 'Inter, Arial',\n        fontWeight: 400,\n        formatter: undefined,\n        inverseOrder: false,\n        width: undefined,\n        height: undefined,\n        tooltipHoverFormatter: undefined,\n        customLegendItems: [],\n        offsetX: 0,\n        offsetY: 0,\n        itemMargin: {\n            horizontal: 5,\n            vertical: 0\n        },\n        onItemClick: {\n            toggleDataSeries: true\n        },\n        onItemHover: {\n            highlightDataSeries: true\n        },\n      },\n      series: [{\n        name: 'Series Column',\n        type: 'column',\n        data: [23, 110, 22, 27, 13, 22, 100, 21, 44, 22, 30]\n      }, {\n        name: 'Series Area',\n        type: 'area',\n        data: [44, 110, 41, 100, 22, 43, 21, 41, 56, 27, 43]\n      }, {\n        name: 'Series Line',\n        type: 'line',\n        data: [30, 110, 36, 30, 45, 100, 64, 52, 59, 36, 39]\n      }],\n\n      dataLabels: {\n        enabled: false\n      },\n\n      title: {\n        text: \"Total Number Of Tests Taken\",\n        align: \"left\"\n      },\n      grid: {\n        row: {\n          colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\n          opacity: 0.5\n        }\n      },\n      xaxis: {\n        categories: [\n          \"Jan\",\n          \"Feb\",\n          \"Mar\",\n          \"Apr\",\n          \"May\",\n          \"Jun\",\n          \"Jul\",\n          \"Aug\",\n          \"Sep\"\n        ]\n      },\n      yaxis: {\n        title: {\n          text: 'Tests',\n        },\n        min: 0\n      },\n\n    };\n    \n\n  }\n \n  \n  ngOnInit(){\n    this.getTeachersList(); \n    this.getSchoolsList();\n  }\n  getTeachersList(){ \n      this.adminService.get('teachers').subscribe({\n        next:(response)=>{ \n          this.teacherData = response;\n      }\n      }) \n  }\n  \n  getSchoolsList(){\n    this.adminService.get('schools').subscribe({\n      next:(response)=>{\n        this.schoolsList = response;\n      }\n    })\n  }\n}\n","<div class=\"row mb15\">\n    <div class=\"col-xs-8 col-8 col-md-9 form-group\"> <h3>Dashboard</h3></div>\n    <div class=\"col-xs-4 col-4 col-md-3 form-group\">\n        <input type=\"text\" placeholder=\"Daterangepicker\" class=\"form-control\" bsDaterangepicker>\n      </div>\n</div>\n<div class=\"row mb15\">\n    <div class=\"col-lg-3\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"d-flex align-items-center justify-content-between\">\n                    <div>\n                        <h1><i class=\"feather icon-edit\"></i></h1>\n                        <h3>Total Tests</h3>\n                    </div>\n                    <div class=\"text-primary fw-bold card-numbers\">{{testsData ? testsData.length : '0'}}</div>\n                </div>\n                <div class=\"mt-4\" id=\"monthly-revenue\" style=\"max-width: 250px;\"></div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-3\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"d-flex align-items-center justify-content-between\">\n                    <div>\n                        <h1><i class=\"feather icon-edit\"></i></h1>\n                        <h3>Total Teachers</h3>\n                    </div>\n                    <div class=\"text-warning fw-bold card-numbers\">{{teacherData ? teacherData.length : '0' }}</div>\n                </div>\n                <div class=\"mt-4\" id=\"monthly-revenue\" style=\"max-width: 250px;\"></div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-3\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"d-flex align-items-center justify-content-between\">\n                    <div>\n                        <h1><i class=\"feather icon-users\"></i></h1>\n                        <h3>Total Schools</h3>\n                    </div>\n                    <div class=\"text-success fw-bold card-numbers\">{{schoolsList ? schoolsList.length:'0'}}</div>\n                </div>\n                <div class=\"mt-4\" id=\"monthly-revenue\" style=\"max-width: 250px;\"></div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-3\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"d-flex align-items-center justify-content-between\">\n                    <div>\n                        <h1><i class=\"feather icon-users\"></i></h1>\n                        <h3>Total Students</h3>\n                    </div>\n                    <div class=\"text-danger fw-bold card-numbers\">{{totalStudents ? totalStudents.length:'0'}}</div>\n                </div>\n                <div class=\"mt-4\" id=\"monthly-revenue\" style=\"max-width: 250px;\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"row mb15\">\n    <div class=\"col-xs-6 col-6 col-md-6\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div id=\"teacherData\">\n                    <apx-chart\n                    [series]=\"$any(barChartOptions.series)\"\n                    [chart]=\"$any(barChartOptions.chart)\"\n                    [xaxis]=\"$any(barChartOptions.xaxis)\"\n                    [dataLabels]=\"$any(barChartOptions.dataLabels)\"\n                    [grid]=\"$any(barChartOptions.grid)\"\n                    [stroke]=\"$any(barChartOptions.stroke)\"\n                    [title]=\"$any(barChartOptions.title)\"\n                    [legend]=\"$any(barChartOptions.legend)\"\n                    [plotOptions]=\"$any(barChartOptions.plotOptions)\"\n                    [fill]=\"$any(barChartOptions.fill)\"\n                    [tooltip]=\"$any(barChartOptions.tooltip)\"\n                    [yaxis]=\"$any(barChartOptions.yaxis)\"\n                  ></apx-chart>\n            </div>\n        </div>\n    </div>\n    </div>\n    <div class=\"col-xs-6 col-6 col-md-6\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                    <div id=\"studentsTests\">\n                        <apx-chart\n                        [series]=\"$any(PieChartOptions.series)\"\n                        [stroke]=\"$any(PieChartOptions.stroke)\"\n                        [title]=\"$any(PieChartOptions.title)\"\n                        [chart]=\"$any(PieChartOptions.chart)\"\n                        [plotOptions]=\"$any(barChartOptions.plotOptions)\" \n                        [tooltip]=\"$any(barChartOptions.tooltip)\"\n                        [labels]=\"$any(PieChartOptions.labels)\"\n                        [responsive]=\"$any(PieChartOptions.responsive)\"\n                      ></apx-chart>\n                  </div>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}