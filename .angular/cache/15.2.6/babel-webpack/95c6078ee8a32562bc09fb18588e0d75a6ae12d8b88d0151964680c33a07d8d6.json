{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"src/app/services/admin.service\";\nimport * as i5 from \"@angular/common\";\nexport class ChangePasswordComponent {\n  constructor(authService, toastr, formBuilder, adminService) {\n    this.authService = authService;\n    this.toastr = toastr;\n    this.formBuilder = formBuilder;\n    this.adminService = adminService;\n    this.showResult = false;\n    this.showPassword = false;\n    this.data = null;\n  }\n  ngOnInit() {\n    this.formGroup = this.formBuilder.group({\n      oldPassword: ['', [Validators.required]],\n      newPassword: ['', [Validators.required]]\n    });\n  }\n  changePassword() {\n    const access_token = localStorage.getItem('access_token');\n    this.old_password = this.formGroup.value.oldPassword;\n    this.new_password = this.formGroup.value.newPassword;\n    // this.adminService.put(url,this.changePasswordForm.value).subscribe(response=>{\n    //   console.log(response)\n    this.authService.changePassword(this.old_password, this.new_password, this.authService.getToken()).subscribe(response => {\n      this.toastr.success('success', 'Updated Successfully!');\n    }, error => {\n      // Handle error\n    });\n    // })\n  }\n\n  onShowPasswordClick() {\n    this.showPassword = !this.showPassword;\n  }\n  onReset() {\n    this.formGroup.reset();\n  }\n}\nChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) {\n  return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.AdminService));\n};\nChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChangePasswordComponent,\n  selectors: [[\"app-change-password\"]],\n  decls: 21,\n  vars: 3,\n  consts: [[1, \"auth-full-height\", \"d-flex\", \"flex-row\", \"align-items-center\"], [1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-4\"], [1, \"card\"], [1, \"card-body\"], [1, \"text-center\", \"mt-3\"], [1, \"fw-bolder\"], [3, \"formGroup\", \"submit\"], [1, \"form-group\", \"mb-3\"], [1, \"form-label\"], [\"formControlName\", \"oldPassword\", \"type\", \"name\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\", \"input-affix\", \"flex-column\", \"mb-3\"], [\"formControlName\", \"newPassword\", \"minlength\", \"3\", \"type\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"type\"], [1, \"suffix-icon\", \"feather\", \"cursor-pointer\", \"text-dark\", 3, \"ngClass\", \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\"]],\n  template: function ChangePasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h3\", 7);\n      i0.ɵɵtext(8, \"Change Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"form\", 8);\n      i0.ɵɵlistener(\"submit\", function ChangePasswordComponent_Template_form_submit_9_listener() {\n        return ctx.changePassword();\n      });\n      i0.ɵɵelementStart(10, \"div\", 9)(11, \"label\", 10);\n      i0.ɵɵtext(12, \"Old Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 12)(15, \"label\", 10);\n      i0.ɵɵtext(16, \"New Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 13);\n      i0.ɵɵelementStart(18, \"i\", 14);\n      i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_i_click_18_listener() {\n        return ctx.onShowPasswordClick();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"button\", 15);\n      i0.ɵɵtext(20, \"Submit\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngClass\", ctx.showPassword ? \"icon-eye-off\" : \"icon-eye\");\n    }\n  },\n  dependencies: [i5.NgClass, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".input-affix[_ngcontent-%COMP%]   .suffix-icon[_ngcontent-%COMP%] {\\n    right: 0.65rem;\\n    top: 50px;\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tbW9uL2NoYW5nZS1wYXNzd29yZC9jaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxTQUFTO0lBQ1QsZUFBZTtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5pbnB1dC1hZmZpeCAuc3VmZml4LWljb24ge1xuICAgIHJpZ2h0OiAwLjY1cmVtO1xuICAgIHRvcDogNTBweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAA8CA,UAAU,QAAQ,gBAAgB;;;;;;;AAUhF,OAAM,MAAOC,uBAAuB;EAQlCC,YAAoBC,WAAwB,EAASC,MAAqB,EAAUC,WAAwB,EAAUC,YAA2B;IAA7H,gBAAW,GAAXH,WAAW;IAAsB,WAAM,GAANC,MAAM;IAAyB,gBAAW,GAAXC,WAAW;IAAuB,iBAAY,GAAZC,YAAY;IANlI,eAAU,GAAG,KAAK;IAClB,iBAAY,GAAG,KAAK;IACpB,SAAI,GAAQ,IAAI;EAIqI;EACrJC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACtCC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,CAAC,CAAC;MACxCC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACW,QAAQ,CAAC;KACxC,CAAC;EACJ;EACAE,cAAc;IACZ,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACzD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACT,SAAS,CAACU,KAAK,CAACR,WAAW;IACpD,IAAI,CAACS,YAAY,GAAG,IAAI,CAACX,SAAS,CAACU,KAAK,CAACN,WAAW;IACpD;IACA;IACA,IAAI,CAACT,WAAW,CAACU,cAAc,CAAC,IAAI,CAACI,YAAY,EAAE,IAAI,CAACE,YAAY,EAAE,IAAI,CAAChB,WAAW,CAACiB,QAAQ,EAAE,CAAC,CAACC,SAAS,CAACC,QAAQ,IAAG;MACpH,IAAI,CAAClB,MAAM,CAACmB,OAAO,CAAC,SAAS,EAAE,uBAAuB,CAAC;IACvD,CAAC,EACDC,KAAK,IAAG;MACN;IAAA,CACD,CACF;IACL;EACF;;EACEC,mBAAmB;IACjB,IAAI,CAACC,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEAC,OAAO;IACL,IAAI,CAACnB,SAAS,CAACoB,KAAK,EAAE;EACxB;;AApCW3B,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbpCC,8BAAiE;MAOXA,+BAAe;MAAAA,iBAAK;MAG9CA,+BAA0D;MAA5BA;QAAA,OAAUC,oBAAgB;MAAA,EAAC;MACrDD,+BAA6B;MACCA,8BAAa;MAAAA,iBAAQ;MAC/CA,6BAAgF;MACpFA,iBAAM;MACNA,gCAAqD;MACvBA,8BAAa;MAAAA,iBAAQ;MAC/CA,6BAA0I;MAC1IA,8BACwF;MAAhCA;QAAA,OAASC,yBAAqB;MAAA,EAAC;MAC3FD,iBAAI;MAEJA,mCAAoD;MAAAA,uBAAM;MAAAA,iBAAS;;;MAZjEA,eAAuB;MAAvBA,yCAAuB;MAOgBA,eAA2C;MAA3CA,6DAA2C;MAEhFA,eAAsD;MAAtDA,wEAAsD","names":["Validators","ChangePasswordComponent","constructor","authService","toastr","formBuilder","adminService","ngOnInit","formGroup","group","oldPassword","required","newPassword","changePassword","access_token","localStorage","getItem","old_password","value","new_password","getToken","subscribe","response","success","error","onShowPasswordClick","showPassword","onReset","reset","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Applications/Angular/Upwork/Angular_QuizApp/src/app/common/change-password/change-password.component.ts","/Applications/Angular/Upwork/Angular_QuizApp/src/app/common/change-password/change-password.component.html"],"sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { Token } from '@angular/compiler';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ToastrService } from 'ngx-toastr'; \n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent {\n  formGroup: FormGroup;\n  showResult = false;\n  showPassword = false;\n  data: any = null;\n  old_password: string;\n  new_password: string;\n  \n  constructor(private authService: AuthService,private toastr: ToastrService, private formBuilder: FormBuilder, private adminService : AdminService) { }\n  ngOnInit() {\n    this.formGroup = this.formBuilder.group({\n      oldPassword: ['', [Validators.required]],\n      newPassword: ['', [Validators.required]]\n    });\n  }\n  changePassword(){\n    const access_token = localStorage.getItem('access_token');\n    this.old_password = this.formGroup.value.oldPassword;\n    this.new_password = this.formGroup.value.newPassword; \n    // this.adminService.put(url,this.changePasswordForm.value).subscribe(response=>{\n    //   console.log(response)\n    this.authService.changePassword(this.old_password, this.new_password, this.authService.getToken()).subscribe(response => {\n        this.toastr.success('success', 'Updated Successfully!');\n        },\n        error => {\n          // Handle error\n        }\n      );\n  // })\n}\n  onShowPasswordClick() {\n    this.showPassword = !this.showPassword\n  }\n\n  onReset() {\n    this.formGroup.reset();\n  }\n}\n","<div class=\"auth-full-height d-flex flex-row align-items-center\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-4\">\n                <div class=\"card\">\n                    <div class=\"card-body\"> \n                            <div class=\"text-center mt-3\">\n                                <h3 class=\"fw-bolder\">Change Password</h3>\n                                <!-- <p class=\"text-muted\"></p> -->\n                            </div>\n                            <form [formGroup]=\"formGroup\" (submit)=\"changePassword()\">\n                                <div class=\"form-group mb-3\">\n                                    <label class=\"form-label\">Old Password </label>\n                                    <input formControlName=\"oldPassword\" class=\"form-control\" type=\"name\" required/>\n                                </div>\n                                <div class=\"form-group input-affix flex-column mb-3\">\n                                    <label class=\"form-label\">New Password </label>\n                                    <input formControlName=\"newPassword\" [type]=\"showPassword ? 'text' : 'password'\" class=\"form-control\" minlength=\"3\" type=\"name\" required/>\n                                    <i class=\"suffix-icon feather cursor-pointer text-dark\" \n                                    [ngClass]=\"showPassword ? 'icon-eye-off' : 'icon-eye'\"  (click)=\"onShowPasswordClick()\">\n                                </i>\n                                </div>\n                                <button type=\"submit\" class=\"btn btn-primary w-100\">Submit</button> \n                            </form>  \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}