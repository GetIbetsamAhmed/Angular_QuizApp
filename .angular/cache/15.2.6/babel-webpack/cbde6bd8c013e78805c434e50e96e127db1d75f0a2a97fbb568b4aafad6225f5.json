{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/admin.service\";\nimport * as i2 from \"ngx-bootstrap/modal\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../common/material-table/material-table.component\";\nimport * as i5 from \"@angular/material/expansion\";\nimport * as i6 from \"@angular/forms\";\nconst _c0 = [\"createQuiz\"];\nfunction QuestionsComponent_div_2_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"app-material-table\", 9);\n    i0.ɵɵlistener(\"actionEvent\", function QuestionsComponent_div_2_div_9_Template_app_material_table_actionEvent_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.actionEvents($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"inputData\", ctx_r2.allQuiz)(\"columns\", ctx_r2.columns);\n  }\n}\nfunction QuestionsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2)(2, \"div\", 3)(3, \"h3\");\n    i0.ɵɵtext(4, \"Quiz List\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function QuestionsComponent_div_2_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.openFormModal());\n    });\n    i0.ɵɵelement(7, \"i\", 6);\n    i0.ɵɵtext(8, \" Create\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(9, QuestionsComponent_div_2_div_9_Template, 2, 2, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.allQuiz);\n  }\n}\nfunction QuestionsComponent_div_3_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const schools_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(schools_r10.name);\n  }\n}\nfunction QuestionsComponent_div_3_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function QuestionsComponent_div_3_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.createQuestion());\n    });\n    i0.ɵɵelement(1, \"i\", 6);\n    i0.ɵɵtext(2, \" Create Question\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction QuestionsComponent_div_3_div_13_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const loop_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(loop_r17.content);\n  }\n}\nfunction QuestionsComponent_div_3_div_13_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 13)(2, \"div\", 20)(3, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function QuestionsComponent_div_3_div_13_div_22_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const indexOfOption_r19 = restoredCtx.index;\n      const indexOfelement_r14 = i0.ɵɵnextContext().index;\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r20.deleteOption(indexOfelement_r14, indexOfOption_r19));\n    });\n    i0.ɵɵelement(4, \"i\", 29);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 14)(6, \"input\", 31);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionsComponent_div_3_div_13_div_22_Template_input_ngModelChange_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const indexOfOption_r19 = restoredCtx.index;\n      const loop_r13 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(loop_r13.choices[indexOfOption_r19].choice_text = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 20)(8, \"input\", 34);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionsComponent_div_3_div_13_div_22_Template_input_ngModelChange_8_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const indexOfOption_r19 = restoredCtx.index;\n      const loop_r13 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(loop_r13.choices[indexOfOption_r19].is_correct = $event);\n    })(\"change\", function QuestionsComponent_div_3_div_13_div_22_Template_input_change_8_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const indexOfOption_r19 = restoredCtx.index;\n      const indexOfelement_r14 = i0.ɵɵnextContext().index;\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r27.checkCheckBoxvalue($event, indexOfelement_r14, indexOfOption_r19));\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(9, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const indexOfOption_r19 = ctx.index;\n    const loop_r13 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵpropertyInterpolate1(\"placeholder\", \"Option No : \", indexOfOption_r19, \"\");\n    i0.ɵɵproperty(\"ngModel\", loop_r13.choices[indexOfOption_r19].choice_text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", loop_r13.choices[indexOfOption_r19].is_correct);\n  }\n}\nfunction QuestionsComponent_div_3_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-accordion\", 26)(2, \"mat-expansion-panel\", 27)(3, \"mat-expansion-panel-header\")(4, \"mat-panel-title\")(5, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function QuestionsComponent_div_3_div_13_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r31);\n      const indexOfelement_r14 = restoredCtx.index;\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r30.deleteQuestion(indexOfelement_r14));\n    });\n    i0.ɵɵelement(6, \"i\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7);\n    i0.ɵɵelementStart(8, \"b\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵelementStart(11, \"div\", 13)(12, \"div\", 30)(13, \"input\", 31);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionsComponent_div_3_div_13_Template_input_ngModelChange_13_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r31);\n      const loop_r13 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(loop_r13.question_text = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 14)(15, \"select\", 15);\n    i0.ɵɵlistener(\"change\", function QuestionsComponent_div_3_div_13_Template_select_change_15_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r31);\n      const indexOfelement_r14 = restoredCtx.index;\n      const ctx_r33 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r33.selectPDA($event, indexOfelement_r14));\n    });\n    i0.ɵɵtemplate(16, QuestionsComponent_div_3_div_13_option_16_Template, 2, 1, \"option\", 16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 23)(18, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function QuestionsComponent_div_3_div_13_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r31);\n      const indexOfelement_r14 = restoredCtx.index;\n      const ctx_r34 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r34.createOption(indexOfelement_r14));\n    });\n    i0.ɵɵelement(19, \"i\", 6);\n    i0.ɵɵtext(20, \" Create Option\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(21, \"br\");\n    i0.ɵɵtemplate(22, QuestionsComponent_div_3_div_13_div_22_Template, 10, 3, \"div\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(23, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const loop_r13 = ctx.$implicit;\n    const indexOfelement_r14 = ctx.index;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\\u00A0\\u00A0\\u00A0 Quiz No : \", indexOfelement_r14, \" : \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(loop_r13.question_text);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate1(\"placeholder\", \"Question No : \", loop_r13.id, \"\");\n    i0.ɵɵproperty(\"ngModel\", loop_r13.question_text);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.personalDevelopmentAreas);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", loop_r13.choices);\n  }\n}\nfunction QuestionsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"div\", 12);\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementStart(4, \"div\", 13)(5, \"div\", 14)(6, \"select\", 15);\n    i0.ɵɵlistener(\"change\", function QuestionsComponent_div_3_Template_select_change_6_listener($event) {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r35 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r35.selectSchool($event));\n    });\n    i0.ɵɵtemplate(7, QuestionsComponent_div_3_option_7_Template, 2, 1, \"option\", 16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 14)(9, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function QuestionsComponent_div_3_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.quizName = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 14);\n    i0.ɵɵtemplate(11, QuestionsComponent_div_3_button_11_Template, 3, 0, \"button\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵtemplate(13, QuestionsComponent_div_3_div_13_Template, 24, 6, \"div\", 19);\n    i0.ɵɵelementStart(14, \"div\", 13)(15, \"div\", 20)(16, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function QuestionsComponent_div_3_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.closeQiuz());\n    });\n    i0.ɵɵelement(17, \"i\", 22);\n    i0.ɵɵtext(18, \" Close\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 23)(20, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function QuestionsComponent_div_3_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.saveQiuz());\n    });\n    i0.ɵɵelement(21, \"i\", 6);\n    i0.ɵɵtext(22, \" Save Quiz\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.allSchools);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.quizName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.quizName !== \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.quizQuestionArr);\n  }\n}\nconst HEADER_DATA = [{\n  name: 'Quiz Name',\n  key: 'name'\n}\n// { name: 'Question Length', key: 'name' },\n];\n\nexport class QuestionsComponent {\n  constructor(adminService, modalService) {\n    this.adminService = adminService;\n    this.modalService = modalService;\n    this.columns = HEADER_DATA;\n    this.quizQuestionArr = [];\n    this.allSchools = [];\n    this.allQuiz = [];\n    this.selectedSchool = \"\";\n    this.quizName = \"\";\n    this.isTable = true;\n    this.personalDevelopmentAreas = [];\n  }\n  selectSchool(value) {\n    let schoolName = value.target.value;\n    this.selectedSchool = this.allSchools.findIndex(data => data.name === schoolName);\n    console.log(this.selectedSchool);\n  }\n  selectPDA(value, questionID) {\n    let pdaName = value.target.value;\n    this.quizQuestionArr[questionID].pda_id = this.personalDevelopmentAreas.findIndex(data => data.content === pdaName);\n    console.log(this.selectedSchool);\n  }\n  openFormModal() {\n    this.isTable = false;\n  }\n  closeQiuz() {\n    this.quizName = \"\";\n    this.quizQuestionArr = [];\n    this.selectedSchool = \"\";\n    this.isTable = true;\n  }\n  ngOnInit() {\n    this.getSchoolsList();\n    this.getQuizList();\n    this.getPersonalDevelopmenetAreas();\n  }\n  getSchoolsList() {\n    this.adminService.get('schools').subscribe({\n      next: response => {\n        this.allSchools = response;\n      }\n    });\n  }\n  getQuizList() {\n    this.adminService.get('tests').subscribe({\n      next: response => {\n        this.allQuiz = response;\n      }\n    });\n  }\n  deleteQuestion(id) {\n    this.quizQuestionArr.splice(id, 1);\n  }\n  deleteOption(questionId, optionId) {\n    this.quizQuestionArr[questionId].choices.splice(optionId, 1);\n  }\n  validateAlert(msg) {\n    alert(msg);\n  }\n  validatation() {\n    let returnVal = false;\n    this.quizQuestionArr.forEach(element => {\n      if (element.question_text === \"\") {\n        this.validateAlert(\"Please Insert Question\");\n        returnVal = false;\n      } else {\n        returnVal = true;\n      }\n      element.choices.forEach(innerElement => {\n        if (innerElement.choice_text === \"\") {\n          this.validateAlert(\"Any choice of the question remain empty\");\n        }\n      });\n    });\n    return returnVal;\n  }\n  saveQiuz() {\n    if (this.validatation()) {\n      console.log(this.quizQuestionArr);\n      let body = {\n        name: this.quizName,\n        school_id: this.selectedSchool,\n        questions: this.quizQuestionArr\n      };\n      // let test = {\n      //   \"name\": \"string\",\n      //   \"school_id\": 0,\n      //   \"questions\": [\n      //     {\n      //       \"question_text\": \"string\",\n      //       \"pda_id\": 0,\n      //       \"choices\": [\n      //         {\n      //           \"choice_text\": \"string\",\n      //           \"is_correct\": true\n      //         }\n      //       ]\n      //     }\n      //   ]\n      // };\n      console.log(body);\n      this.adminService.post(\"tests\", body).subscribe(data => {\n        debugger;\n        this.closeQiuz();\n        this.getQuizList();\n      });\n    }\n  }\n  getPersonalDevelopmenetAreas() {\n    this.adminService.get('personalDevelopmentAreas').subscribe({\n      next: response => {\n        this.personalDevelopmentAreas = response;\n      }\n    });\n  }\n  createQuestion() {\n    this.quizQuestionArr.push({\n      question_text: \"\",\n      pda_id: 0,\n      choices: []\n    });\n  }\n  checkCheckBoxvalue(event, questionId, optionId) {\n    for (let index = 0; index < this.quizQuestionArr[questionId].choices.length; index++) {\n      this.quizQuestionArr[questionId].choices[index].is_correct = false;\n    }\n    this.quizQuestionArr[questionId].choices[optionId].is_correct = true;\n    console.log(questionId, optionId);\n  }\n  createOption(id) {\n    this.quizQuestionArr[id].choices.push({\n      choice_text: \"\",\n      is_correct: false\n    });\n  }\n  actionEvents(event) {}\n}\nQuestionsComponent.ɵfac = function QuestionsComponent_Factory(t) {\n  return new (t || QuestionsComponent)(i0.ɵɵdirectiveInject(i1.AdminService), i0.ɵɵdirectiveInject(i2.BsModalService));\n};\nQuestionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuestionsComponent,\n  selectors: [[\"app-questions\"]],\n  viewQuery: function QuestionsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.updateTemplate = _t.first);\n    }\n  },\n  decls: 4,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"class\", \"container-fluid\", 4, \"ngIf\"], [1, \"row\", \"mb15\"], [1, \"col-xs-10\", \"col-10\", \"col-md-10\", \"form-group\"], [1, \"col-xs-2\", \"col-2\", \"col-md-2\", \"form-group\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#quizList\", 1, \"btn\", \"btn-1d\", \"float-end\", 3, \"click\"], [1, \"feather\", \"icon-plus\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"row\"], [3, \"inputData\", \"columns\", \"actionEvent\"], [1, \"container-fluid\"], [1, \"card\"], [1, \"card-body\"], [1, \"row\", \"mt5\"], [1, \"col-md-3\"], [1, \"form-select\", 3, \"change\"], [\"class\", \"form-control\", \"id\", \"inputField\", \"matInput\", \"\", \"placeholder\", \"Select School\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Quiz Name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"class\", \"btn btn-1d\", \"data-bs-toggle\", \"modal\", 3, \"click\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"col-md-1\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"feather\", \"icon-close\"], [1, \"col-md-2\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", 1, \"btn\", \"btn-1d\", 3, \"click\"], [\"id\", \"inputField\", \"matInput\", \"\", \"placeholder\", \"Select School\", 1, \"form-control\"], [\"multi\", \"\", 1, \"example-headers-align\", 2, \"margin-top\", \"50px\"], [\"expanded\", \"true\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", 1, \"btn\", \"float-end\", \"btn-danger\", 3, \"click\"], [1, \"feather\", \"icon-trash\"], [1, \"col-md-6\"], [\"type\", \"text\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", 1, \"btn\", \"btn-1d\", \"float-end\", 3, \"click\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", 1, \"btn\", \"btn-danger\", \"float-end\", 3, \"click\"], [\"type\", \"checkbox\", \"name\", \"myData\", 3, \"ngModel\", \"ngModelChange\", \"change\"]],\n  template: function QuestionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"br\")(1, \"br\");\n      i0.ɵɵtemplate(2, QuestionsComponent_div_2_Template, 10, 1, \"div\", 0);\n      i0.ɵɵtemplate(3, QuestionsComponent_div_3_Template, 23, 4, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isTable);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isTable);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.MaterialTableComponent, i5.MatAccordion, i5.MatExpansionPanel, i5.MatExpansionPanelHeader, i5.MatExpansionPanelTitle, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.CheckboxControlValueAccessor, i6.NgControlStatus, i6.RequiredValidator, i6.NgModel],\n  styles: [\".mat-accordion[_ngcontent-%COMP%] > .mat-expansion-panel-spacing[_ngcontent-%COMP%]:last-child, .mat-accordion[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]:last-child:not(.mat-expansion-panel)   .mat-expansion-panel-spacing[_ngcontent-%COMP%] {\\n    margin-bottom: 0;\\n    border: 1px solid #ccc !important;\\n}\\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    padding: 0 24px;\\n    border-radius: inherit;\\n    transition: height 225ms cubic-bezier(0.4, 0, 0.2, 1);\\n    border: 1px solid #ccc;\\n    padding: 15px;\\n}\\n.mat-expansion-panel-content[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    overflow: visible;\\n    padding: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vcXVlc3Rpb25zL3F1ZXN0aW9ucy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGlDQUFpQztBQUNyQztBQUNBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLHNCQUFzQjtJQUN0QixxREFBcUQ7SUFDckQsc0JBQXNCO0lBQ3RCLGFBQWE7QUFDakI7QUFDQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsaUJBQWlCO0lBQ2pCLGFBQWE7QUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWFjY29yZGlvbj4ubWF0LWV4cGFuc2lvbi1wYW5lbC1zcGFjaW5nOmxhc3QtY2hpbGQsIC5tYXQtYWNjb3JkaW9uPio6bGFzdC1jaGlsZDpub3QoLm1hdC1leHBhbnNpb24tcGFuZWwpIC5tYXQtZXhwYW5zaW9uLXBhbmVsLXNwYWNpbmcge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYyAhaW1wb3J0YW50O1xufVxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAwIDI0cHg7XG4gICAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDtcbiAgICB0cmFuc2l0aW9uOiBoZWlnaHQgMjI1bXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgIHBhZGRpbmc6IDE1cHg7XG59XG4ubWF0LWV4cGFuc2lvbi1wYW5lbC1jb250ZW50IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgcGFkZGluZzogMTVweDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","HEADER_DATA","name","key","QuestionsComponent","constructor","adminService","modalService","selectSchool","value","schoolName","target","selectedSchool","allSchools","findIndex","data","console","log","selectPDA","questionID","pdaName","quizQuestionArr","pda_id","personalDevelopmentAreas","content","openFormModal","isTable","closeQiuz","quizName","ngOnInit","getSchoolsList","getQuizList","getPersonalDevelopmenetAreas","get","subscribe","next","response","allQuiz","deleteQuestion","id","splice","deleteOption","questionId","optionId","choices","validateAlert","msg","alert","validatation","returnVal","forEach","element","question_text","innerElement","choice_text","saveQiuz","body","school_id","questions","post","createQuestion","push","checkCheckBoxvalue","event","index","length","is_correct","createOption","actionEvents","selectors","viewQuery"],"sourceRoot":"","sources":["/Applications/Angular/Upwork/Angular_QuizApp/src/app/admin/questions/questions.component.html","/Applications/Angular/Upwork/Angular_QuizApp/src/app/admin/questions/questions.component.ts"],"sourcesContent":["<br><br>\n<div *ngIf=\"isTable\">\n    <div class=\"row mb15\">\n        <div class=\"col-xs-10 col-10 col-md-10 form-group\">\n            <h3>Quiz List</h3>\n        </div>\n        <div class=\"col-xs-2 col-2 col-md-2 form-group\">\n            <button type=\"button\" class=\"btn btn-1d float-end\" (click)=\"openFormModal()\" data-bs-toggle=\"modal\"\n                data-bs-target=\"#quizList\"><i class=\"feather icon-plus\"></i> Create</button>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"allQuiz\">\n        <app-material-table [inputData]=\"allQuiz\" [columns]=\"columns\"\n            (actionEvent)=\"actionEvents($event)\"></app-material-table>\n    </div>\n</div>\n\n<div *ngIf=\"!isTable\" class=\"container-fluid\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <br>\n            <div class=\"row mt5\">\n\n                <div class=\"col-md-3\">\n                    <select class=\"form-select\" (change)=\"selectSchool($event)\">\n                        <option class=\"form-control\" id=\"inputField\" matInput placeholder=\"Select School\"\n                            *ngFor=\"let schools of allSchools\">{{schools.name}}</option>\n                    </select>\n                </div>\n\n                <div class=\"col-md-3\">\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"quizName\" placeholder=\"Quiz Name\" required />\n                </div>\n                <div class=\"col-md-3\">\n                    <button *ngIf=\"this.quizName !== ''\" type=\"button\" class=\"btn btn-1d\" (click)=\"createQuestion()\"\n                        data-bs-toggle=\"modal\"><i class=\"feather icon-plus\"></i>\n                        Create Question</button>\n                </div>\n            </div>\n            <br>\n\n            <div *ngFor=\"let loop of quizQuestionArr; let indexOfelement=index;\">\n                <mat-accordion style=\"margin-top:50px\" class=\"example-headers-align\" multi>\n                    <mat-expansion-panel expanded=\"true\">\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                <button type=\"button\" class=\"btn float-end btn-danger\" (click)=\"deleteQuestion(indexOfelement)\"\n                                    data-bs-toggle=\"modal\"><i class=\"feather icon-trash\"></i>\n                                </button>&nbsp;&nbsp;&nbsp; Quiz No : {{indexOfelement}} : <b>{{loop.question_text}}</b>\n                                </mat-panel-title>\n                        </mat-expansion-panel-header>\n                        <br>\n                        <div class=\"row mt5\">\n                            <div class=\"col-md-6\">\n                                <input type=\"text\" [(ngModel)]=\"loop.question_text\" class=\"form-control\" placeholder=\"Question No : {{loop.id}}\"\n                                    required />\n                            </div>\n                            <div class=\"col-md-3\">\n                                <select class=\"form-select\" (change)=\"selectPDA($event , indexOfelement)\">\n                                    <option class=\"form-control\" id=\"inputField\" matInput placeholder=\"Select School\"\n                                        *ngFor=\"let loop of personalDevelopmentAreas\">{{loop.content}}</option>\n                                </select>\n                            </div>\n                            <div class=\"col-md-2\">\n                                <button type=\"button\" class=\"btn btn-1d float-end\" (click)=\"createOption(indexOfelement)\" data-bs-toggle=\"modal\"><i\n                                        class=\"feather icon-plus\"></i>\n                                    Create Option</button>\n                            </div>\n                        </div>\n                        <br>\n                        <div *ngFor=\"let optionLoop of loop.choices; let indexOfOption=index;\">\n                            <div class=\"row mt5\">\n                                <div class=\"col-md-1\">\n                                    <button type=\"button\" class=\"btn btn-danger float-end\" (click)=\"deleteOption(indexOfelement , indexOfOption)\"\n                                        data-bs-toggle=\"modal\"><i class=\"feather icon-trash\"></i></button>\n                                </div>\n                                <div class=\"col-md-3\">\n                                    <input type=\"text\" [(ngModel)]=\"loop.choices[indexOfOption].choice_text\" class=\"form-control\"\n                                        placeholder=\"Option No : {{indexOfOption}}\" required />\n                                    </div>\n                                <div class=\"col-md-1\">\n                                    <input type=\"checkbox\" name=\"myData\" [(ngModel)]=\"loop.choices[indexOfOption].is_correct\"\n                                        (change)=\"checkCheckBoxvalue($event , indexOfelement , indexOfOption)\">\n                                </div>\n                            </div>\n                            <br>\n                            </div>\n                            </mat-expansion-panel>\n                            </mat-accordion>\n                <br>\n            </div>\n            \n            <div class=\"row mt5\">\n                <div class=\"col-md-1\">\n                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"closeQiuz()\" data-bs-toggle=\"modal\"><i\n                            class=\"feather icon-close\"></i>\n                        Close</button>\n                </div>\n                    <div class=\"col-md-2\">\n                        <button type=\"button\" class=\"btn btn-1d\" (click)=\"saveQiuz()\" data-bs-toggle=\"modal\"><i\n                                class=\"feather icon-plus\"></i>\n                            Save Quiz</button>\n                    </div>\n                    </div>\n\n        </div>\n    </div>\n</div>","import { Component, TemplateRef, ViewChild } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ActionEvent } from 'src/app/interfaces/admin.interface';\nimport { modalConfig } from 'src/app/interfaces/common';\nimport { AdminService } from 'src/app/services/admin.service';\n\nconst HEADER_DATA: any[] = [\n  { name: 'Quiz Name', key: 'name' },\n  // { name: 'Question Length', key: 'name' },\n]\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css']\n})\n\n\nexport class QuestionsComponent {\n\n  constructor(private adminService: AdminService, private modalService: BsModalService) {\n\n  }\n\n  columns: any[] = HEADER_DATA;\n  actionEvent: ActionEvent;\n  quizQuestionArr: any = [];\n  allSchools: any = [];\n  allQuiz: any = [];\n  selectedSchool = \"\";\n  quizName = \"\";\n  modalRef: BsModalRef;\n  isTable = true;\n  personalDevelopmentAreas: any = [];\n\n  @ViewChild('createQuiz') updateTemplate: TemplateRef<any>;\n\n  selectSchool(value: any) {\n    let schoolName = value.target.value;\n    this.selectedSchool = this.allSchools.findIndex((data: any) => data.name === schoolName);\n    console.log(this.selectedSchool);\n  }\n\n  selectPDA(value: any, questionID: number) {\n    let pdaName = value.target.value;\n    this.quizQuestionArr[questionID].pda_id = this.personalDevelopmentAreas.findIndex((data: any) => data.content === pdaName);\n    console.log(this.selectedSchool);\n  }\n\n  openFormModal() {\n    this.isTable = false;\n  }\n\n  closeQiuz() {\n    this.quizName = \"\";\n    this.quizQuestionArr = [];\n    this.selectedSchool = \"\";\n    this.isTable = true;\n  }\n\n  ngOnInit() {\n    this.getSchoolsList();\n    this.getQuizList();\n    this.getPersonalDevelopmenetAreas();\n  }\n\n  getSchoolsList() {\n    this.adminService.get('schools').subscribe({\n      next: (response) => {\n        this.allSchools = response;\n      }\n    })\n  }\n\n  getQuizList() {\n    this.adminService.get('tests').subscribe({\n      next: (response) => {\n        this.allQuiz = response;\n      }\n    })\n  }\n\n  deleteQuestion(id: number) {\n    this.quizQuestionArr.splice(id, 1);\n  }\n\n  deleteOption(questionId: number, optionId: number) {\n    this.quizQuestionArr[questionId].choices.splice(optionId, 1);\n  }\n\n  validateAlert(msg: string) {\n    alert(msg);\n  }\n  validatation() {\n    let returnVal = false;\n    this.quizQuestionArr.forEach((element: any) => {\n      if (element.question_text === \"\") {\n        this.validateAlert(\"Please Insert Question\");\n        returnVal = false;\n      }\n      else {\n        returnVal = true;\n      }\n\n      element.choices.forEach((innerElement: any) => {\n        if (innerElement.choice_text === \"\") {\n          this.validateAlert(\"Any choice of the question remain empty\");\n        }\n      });\n\n    });\n    return returnVal;\n  }\n\n  saveQiuz() {\n\n    if (this.validatation()) {\n\n      console.log(this.quizQuestionArr);\n      let body = {\n        name: this.quizName,\n        school_id: this.selectedSchool,\n        questions: this.quizQuestionArr\n      };\n\n      // let test = {\n      //   \"name\": \"string\",\n      //   \"school_id\": 0,\n      //   \"questions\": [\n      //     {\n      //       \"question_text\": \"string\",\n      //       \"pda_id\": 0,\n      //       \"choices\": [\n      //         {\n      //           \"choice_text\": \"string\",\n      //           \"is_correct\": true\n      //         }\n      //       ]\n      //     }\n      //   ]\n      // };\n      console.log(body);\n\n      this.adminService.post(\"tests\", body).subscribe(data => {\n        debugger;\n        this.closeQiuz();\n        this.getQuizList();\n      })\n    }\n\n  }\n\n  getPersonalDevelopmenetAreas() {\n    this.adminService.get('personalDevelopmentAreas').subscribe({\n      next: (response) => {\n        this.personalDevelopmentAreas = response;\n      }\n    })\n  }\n\n  createQuestion() {\n    this.quizQuestionArr.push({\n      question_text: \"\",\n      pda_id: 0,\n      choices: [],\n    });\n  }\n\n  checkCheckBoxvalue(event: any, questionId: number, optionId: number) {\n    for (let index = 0; index < this.quizQuestionArr[questionId].choices.length; index++) {\n      this.quizQuestionArr[questionId].choices[index].is_correct = false;\n    }\n    this.quizQuestionArr[questionId].choices[optionId].is_correct = true;\n    console.log(questionId, optionId);\n  }\n\n  createOption(id: number) {\n    this.quizQuestionArr[id].choices.push({\n      choice_text: \"\",\n      is_correct: false\n    });\n  }\n\n  actionEvents(event: ActionEvent) { }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}