{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { modalConfig } from 'src/app/interfaces/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/modal\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"src/app/services/admin.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../common/material-table/material-table.component\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/forms\";\nconst _c0 = [\"deleteTemplate\"];\nconst _c1 = [\"updateTemplate\"];\nfunction TeachersListComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"app-material-table\", 9);\n    i0.ɵɵlistener(\"actionEvent\", function TeachersListComponent_div_8_Template_app_material_table_actionEvent_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.actionEvents($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"inputData\", ctx_r0.data)(\"columns\", ctx_r0.columns);\n  }\n}\nfunction TeachersListComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"h4\", 11);\n    i0.ɵɵtext(2, \"Teachers List \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function TeachersListComponent_ng_template_9_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.modalRef.hide());\n    });\n    i0.ɵɵelementStart(4, \"span\", 13);\n    i0.ɵɵtext(5, \"\\u00D7\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\", 14)(7, \"p\");\n    i0.ɵɵtext(8, \"Are you sure you want to delete?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function TeachersListComponent_ng_template_9_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.confirmEvent());\n    });\n    i0.ɵɵtext(10, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function TeachersListComponent_ng_template_9_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.modalRef.hide());\n    });\n    i0.ɵɵtext(12, \"Cancel\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TeachersListComponent_ng_template_11_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const schools_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(schools_r12.name);\n  }\n}\nfunction TeachersListComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"h4\", 11);\n    i0.ɵɵtext(2, \"Teachers List\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function TeachersListComponent_ng_template_11_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.modalRef.hide());\n    });\n    i0.ɵɵelementStart(4, \"span\", 13);\n    i0.ɵɵtext(5, \"\\u00D7\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\", 14)(7, \"form\", 17)(8, \"div\", 8)(9, \"div\", 18)(10, \"label\", 19);\n    i0.ɵɵtext(11, \"Select School\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"select\", 20);\n    i0.ɵɵlistener(\"change\", function TeachersListComponent_ng_template_11_Template_select_change_12_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.selectSchool($event));\n    });\n    i0.ɵɵtemplate(13, TeachersListComponent_ng_template_11_option_13_Template, 2, 1, \"option\", 21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 18)(15, \"label\", 19);\n    i0.ɵɵtext(16, \"User Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 18)(19, \"label\", 19);\n    i0.ɵɵtext(20, \"Email Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 18)(23, \"label\", 19);\n    i0.ɵɵtext(24, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"input\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"div\", 18)(27, \"label\", 19);\n    i0.ɵɵtext(28, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(29, \"input\", 25);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(30, \"div\", 26)(31, \"div\", 27)(32, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function TeachersListComponent_ng_template_11_Template_button_click_32_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.confirmEvent());\n    });\n    i0.ɵɵtext(33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function TeachersListComponent_ng_template_11_Template_button_click_34_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.modalRef.hide());\n    });\n    i0.ɵɵtext(35, \"Cancel\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formGroup\", ctx_r4.teachersListForm);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.schoolsList);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"placeholder\", ctx_r4.isAddModel ? \"Enter User name\" : \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"placeholder\", ctx_r4.isAddModel ? \"Enter Email Address\" : \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"placeholder\", ctx_r4.isAddModel ? \"Enter Password\" : \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"placeholder\", ctx_r4.isAddModel ? \"Retype Password\" : \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r4.isAddModel ? \"Create\" : \"Update\");\n  }\n}\nconst HEADER_DATA = [{\n  name: 'User Name',\n  key: 'username'\n}, {\n  name: 'Email Address',\n  key: 'email'\n}, {\n  name: 'School Name',\n  key: 'school_name'\n}];\nexport class TeachersListComponent {\n  constructor(modalService, toastr, adminService) {\n    this.modalService = modalService;\n    this.toastr = toastr;\n    this.adminService = adminService;\n    this.teachersListForm = new FormGroup({\n      school_name: new FormControl(''),\n      username: new FormControl(''),\n      email: new FormControl(''),\n      password: new FormControl(''),\n      confirm_password: new FormControl('')\n    });\n    this.columns = HEADER_DATA;\n    this.data = null;\n    this.isAddModel = true;\n    this.selectedSchool = '';\n  }\n  ngOnInit() {\n    this.getTeachersList();\n    this.getSchoolsList();\n  }\n  getTeachersList() {\n    this.adminService.get('teachers').subscribe({\n      next: response => {\n        let teacherDataArray = [];\n        this.teacherData = response;\n        for (let i = 0; i < this.teacherData.length; i++) {\n          let teacherObj;\n          teacherObj = {\n            email: this.teacherData[i].email,\n            username: this.teacherData[i].username,\n            school_name: this.teacherData[i].school_name,\n            id: this.teacherData[i].id,\n            password: this.teacherData[i].password,\n            confirm_password: this.teacherData[i].confirm_password\n          };\n          teacherDataArray.push(teacherObj);\n          this.data = teacherDataArray;\n        }\n      }\n    });\n  }\n  getSchoolsList() {\n    this.adminService.get('schools').subscribe(response => {\n      this.schoolsList = response;\n    });\n  }\n  openFormModal() {\n    this.modalRef = this.modalService.show(this.updateTemplate, modalConfig);\n  }\n  actionEvents(event) {\n    this.actionEvent = event;\n    if (event.type === 'edit') {\n      this.openEditModel();\n    } else if (event.type === 'delete') {\n      this.openDeleteModel();\n    }\n  }\n  openEditModel() {\n    this.isAddModel = false;\n    this.teachersListForm.get('username')?.setValue(this.actionEvent?.data?.username);\n    this.teachersListForm.get('email')?.setValue(this.actionEvent?.data?.email);\n    this.teachersListForm.get('school_name')?.setValue(this.actionEvent?.data?.selectedSchool);\n    this.teachersListForm.get('password')?.setValue(this.actionEvent?.data?.password);\n    this.modalRef = this.modalService.show(this.updateTemplate, modalConfig);\n  }\n  openDeleteModel() {\n    this.modalRef = this.modalService.show(this.deleteTemplate, modalConfig);\n  }\n  confirmEvent() {\n    if (this.actionEvent === null || this.actionEvent === undefined) {\n      this.createTeachersList();\n    } else if (this.actionEvent && this.actionEvent.type === 'edit') {\n      this.updateTeachersList();\n    } else if (this.actionEvent && this.actionEvent.type === 'delete') {\n      this.deleteTeachersList();\n    }\n  }\n  createTeachersList() {\n    this.teachersListForm.value.school_name = this.selectedSchool;\n    this.adminService.post('teachers', this.teachersListForm.value).subscribe(response => {\n      if (response) {\n        this.data.push(response);\n        this.toastr.success('success', 'Added Successfully!');\n        this.data = structuredClone(this.data);\n        this.modalRef.hide();\n        this.teachersListForm.reset();\n      }\n    });\n  }\n  updateTeachersList() {\n    this.teachersListForm.value.school_name = this.selectedSchool;\n    let url = \"teachers/\" + this.actionEvent.data.id;\n    this.adminService.put(url, this.teachersListForm.value).subscribe(response => {\n      let index = this.data.findIndex(x => x.id === this.actionEvent.data.id);\n      this.data[index] = {\n        ...response\n      };\n      this.data = structuredClone(this.data);\n      if (response) {\n        this.getTeachersList();\n        this.toastr.success('success', 'Updated Successfully!');\n        this.modalRef.hide();\n      }\n    });\n  }\n  deleteTeachersList() {\n    let url = `teachers/${this.actionEvent.data.id}`;\n    this.adminService.delete(url).subscribe(response => {\n      this.data = this.data.filter(x => x.id !== this.actionEvent.data.id);\n      this.data = structuredClone(this.data);\n      if (response) {\n        this.toastr.success('success', 'Deleted Successfully!');\n        this.modalRef.hide();\n      }\n    });\n  }\n  ngOnDestroy() {\n    this.actionEvent = null;\n  }\n  selectSchool(value) {\n    this.selectedSchool = value.target.value;\n  }\n}\nTeachersListComponent.ɵfac = function TeachersListComponent_Factory(t) {\n  return new (t || TeachersListComponent)(i0.ɵɵdirectiveInject(i1.BsModalService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.AdminService));\n};\nTeachersListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TeachersListComponent,\n  selectors: [[\"app-teachers-list\"]],\n  viewQuery: function TeachersListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.deleteTemplate = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.updateTemplate = _t.first);\n    }\n  },\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"row\", \"mb15\"], [1, \"col-xs-10\", \"col-10\", \"col-md-10\", \"form-group\"], [1, \"col-xs-2\", \"col-2\", \"col-md-2\", \"form-group\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#schoolsList\", 1, \"btn\", \"btn-1d\", \"float-end\", 3, \"click\"], [1, \"feather\", \"icon-plus\"], [\"class\", \"row\", 4, \"ngIf\"], [\"deleteTemplate\", \"\"], [\"updateTemplate\", \"\"], [1, \"row\"], [3, \"inputData\", \"columns\", \"actionEvent\"], [1, \"modal-header\"], [1, \"modal-title\", \"pull-left\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\", \"close\", \"pull-right\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"visually-hidden\"], [1, \"modal-body\", \"text-center\"], [\"type\", \"button\", 1, \"btn\", \"btn-1d\", \"mr5\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"mb15\", 3, \"formGroup\"], [1, \"col-md-6\"], [\"for\", \"inputField\", 1, \"d-flex\"], [1, \"form-select\", 3, \"change\"], [\"class\", \"form-control\", \"id\", \"inputField\", \"matInput\", \"\", \"formControlName\", \"school_name\", \"placeholder\", \"Select School\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"inputField\", \"matInput\", \"\", \"formControlName\", \"username\", 1, \"form-control\", 3, \"placeholder\"], [\"type\", \"email\", \"id\", \"inputField\", \"matInput\", \"\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"placeholder\"], [\"type\", \"password\", \"id\", \"inputField\", \"minlength\", \"8\", \"required\", \"\", \"pattern\", \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\", \"matInput\", \"\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"placeholder\"], [\"type\", \"password\", \"id\", \"inputField\", \"matInput\", \"\", \"formControlName\", \"confirm_password\", \"required\", \"\", 1, \"form-control\", 3, \"placeholder\"], [1, \"mt-10\"], [1, \"float-end\"], [\"id\", \"inputField\", \"matInput\", \"\", \"formControlName\", \"school_name\", \"placeholder\", \"Select School\", 1, \"form-control\"]],\n  template: function TeachersListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n      i0.ɵɵtext(3, \"Teachers List\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function TeachersListComponent_Template_button_click_5_listener() {\n        return ctx.openFormModal();\n      });\n      i0.ɵɵelement(6, \"i\", 4);\n      i0.ɵɵtext(7, \" Create\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(8, TeachersListComponent_div_8_Template, 2, 2, \"div\", 5);\n      i0.ɵɵtemplate(9, TeachersListComponent_ng_template_9_Template, 13, 0, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(11, TeachersListComponent_ng_template_11_Template, 36, 7, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.data);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.MaterialTableComponent, i6.MatInput, i7.ɵNgNoValidate, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.MinLengthValidator, i7.PatternValidator, i7.FormGroupDirective, i7.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","modalConfig","i0","HEADER_DATA","name","key","TeachersListComponent","constructor","modalService","toastr","adminService","school_name","username","email","password","confirm_password","ngOnInit","getTeachersList","getSchoolsList","get","subscribe","next","response","teacherDataArray","teacherData","i","length","teacherObj","id","push","data","schoolsList","openFormModal","modalRef","show","updateTemplate","actionEvents","event","actionEvent","type","openEditModel","openDeleteModel","isAddModel","teachersListForm","setValue","selectedSchool","deleteTemplate","confirmEvent","undefined","createTeachersList","updateTeachersList","deleteTeachersList","value","post","success","structuredClone","hide","reset","url","put","index","findIndex","x","delete","filter","ngOnDestroy","selectSchool","target","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/Applications/Angular/Upwork/Angular_QuizApp/src/app/admin/teachers-list/teachers-list.component.ts","/Applications/Angular/Upwork/Angular_QuizApp/src/app/admin/teachers-list/teachers-list.component.html"],"sourcesContent":["import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms'; \nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActionEvent } from 'src/app/interfaces/admin.interface';\nimport { modalConfig } from 'src/app/interfaces/common';\nimport { AdminService } from 'src/app/services/admin.service'; \n\nconst HEADER_DATA: any[] = [ \n  {name:'User Name', key:'username'},\n  {name:'Email Address', key:'email'},\n  {name:'School Name', key:'school_name'},\n]\n\n@Component({\n  selector: 'app-teachers-list',\n  templateUrl: './teachers-list.component.html',\n  styleUrls: ['./teachers-list.component.css']\n})\nexport class TeachersListComponent implements OnInit{\n\n  teachersListForm: FormGroup=new FormGroup({\n    school_name: new FormControl(''),\n    username: new FormControl(''),\n    email: new FormControl(''),\n    password: new FormControl(''),\n    confirm_password: new FormControl('')\n  })\n  @ViewChild('deleteTemplate') deleteTemplate: TemplateRef<any>;\n  @ViewChild('updateTemplate') updateTemplate: TemplateRef<any>;\n  columns: any[] = HEADER_DATA;\n  actionEvent:ActionEvent;\n  data: any = null;\n  modalRef: BsModalRef;\n  isAddModel: boolean=true;\n  teacherData: any[];\n  schoolsList: any[]; \n  selectedSchool = '';\n  \n\n  constructor(private modalService: BsModalService,private toastr: ToastrService, private adminService : AdminService){}\n  \n  ngOnInit(){\n    this.getTeachersList();\n    this.getSchoolsList(); \n  }\n  getTeachersList(){ \n      this.adminService.get('teachers').subscribe({\n        next:(response)=>{\n          let teacherDataArray = [];\n          this.teacherData = response;\n          for (let i = 0; i < this.teacherData.length; i++) {\n            let teacherObj;\n            teacherObj = {\n              email: this.teacherData[i].email,\n              username: this.teacherData[i].username,\n              school_name: this.teacherData[i].school_name,\n              id:this.teacherData[i].id,\n              password:this.teacherData[i].password,\n              confirm_password:this.teacherData[i].confirm_password,\n            };\n            teacherDataArray.push(teacherObj);\n          this.data = teacherDataArray;\n        }\n      }\n      }) \n  }\n  getSchoolsList(){\n    this.adminService.get('schools').subscribe(response => {\n      this.schoolsList = response;\n    });\n  }\n  openFormModal() {\n    this.modalRef = this.modalService.show(this.updateTemplate,modalConfig);\n  }\n\n  actionEvents(event:ActionEvent){\n    this.actionEvent = event;\n    if(event.type==='edit'){\n      this.openEditModel()\n    }\n    else if(event.type==='delete'){\n    this.openDeleteModel()\n    }\n  }\n  openEditModel(){\n    this.isAddModel=false \n    this.teachersListForm.get('username')?.setValue(this.actionEvent?.data?.username);\n    this.teachersListForm.get('email')?.setValue(this.actionEvent?.data?.email); \n    this.teachersListForm.get('school_name')?.setValue(this.actionEvent?.data?.selectedSchool);\n    this.teachersListForm.get('password')?.setValue(this.actionEvent?.data?.password);\n    this.modalRef = this.modalService.show(this.updateTemplate,modalConfig);\n  }\n  openDeleteModel(){\n    this.modalRef = this.modalService.show(this.deleteTemplate,modalConfig);\n  }\n  confirmEvent(){\n    if(this.actionEvent===null || this.actionEvent===undefined){\n      this.createTeachersList();\n    }\n    else if(this.actionEvent && this.actionEvent.type==='edit'){\n    this.updateTeachersList();\n    }\n    else if(this.actionEvent && this.actionEvent.type==='delete'){\n      this.deleteTeachersList();\n    }\n  }\n  createTeachersList(){\n    this.teachersListForm.value.school_name = this.selectedSchool; \n      this.adminService.post('teachers',this.teachersListForm.value).subscribe(response=>{\n     if(response){\n       this.data.push(response);\n       this.toastr.success('success', 'Added Successfully!');\n       this.data = structuredClone(this.data);\n       this.modalRef.hide();\n       this.teachersListForm.reset();\n   }\n   });\n  }\n  updateTeachersList(){\n    this.teachersListForm.value.school_name = this.selectedSchool;\n    let url=\"teachers/\"+this.actionEvent.data.id;\n    this.adminService.put(url,this.teachersListForm.value).subscribe(response=>{\n      let index=this.data.findIndex((x:any)=>x.id===this.actionEvent.data.id);\n      this.data[index]={...response};\n      this.data=structuredClone(this.data)\n         if(response){\n            this.getTeachersList();\n           this.toastr.success('success', 'Updated Successfully!');\n           this.modalRef.hide();\n         }\n     });\n  }\n  deleteTeachersList(){\n    let url=`teachers/${this.actionEvent.data.id}`\n    this.adminService.delete(url).subscribe(response=>{\n      this.data=this.data.filter((x:any)=>x.id!==this.actionEvent.data.id);\n      this.data=structuredClone(this.data);\n      if (response) {\n        this.toastr.success('success', 'Deleted Successfully!');\n        this.modalRef.hide();\n      }\n    });\n  }\n  ngOnDestroy(): void {\n    this.actionEvent=null as any;\n  }\n \n  selectSchool(value: any) {\n    this.selectedSchool = value.target.value;\n    }\n  }\n","<div class=\"row mb15\">\n  <div class=\"col-xs-10 col-10 col-md-10 form-group\">\n    <h3>Teachers List</h3>\n  </div>\n  <div class=\"col-xs-2 col-2 col-md-2 form-group\">\n    <button type=\"button\" class=\"btn btn-1d float-end\" (click)=\"openFormModal()\" data-bs-toggle=\"modal\"\n      data-bs-target=\"#schoolsList\"><i class=\"feather icon-plus\"></i> Create</button>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"data\">\n  <app-material-table [inputData]=\"data\" [columns]=\"columns\" (actionEvent)=\"actionEvents($event)\"></app-material-table>\n</div>\n\n\n<!-- Delete Modal -->\n<ng-template #deleteTemplate>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Teachers List </h4>\n    <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body text-center\">\n    <p>Are you sure you want to delete?</p>\n    <button type=\"button\" class=\"btn btn-1d mr5\" (click)=\"confirmEvent()\">Delete</button>\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"this.modalRef.hide()\">Cancel</button>\n  </div>\n</ng-template>\n\n<!-- ADD Modal -->\n\n<!-- Update Modal -->\n<ng-template #updateTemplate>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Teachers List</h4>\n    <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body text-center\">\n    <form [formGroup]=\"teachersListForm\" class=\"mb15\">\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <label for=\"inputField\" class=\"d-flex\">Select School</label>\n          <select class=\"form-select\" (change)=\"selectSchool($event)\">\n            <option class=\"form-control\" id=\"inputField\" matInput formControlName=\"school_name\" placeholder=\"Select School\" *ngFor=\"let schools of schoolsList\">{{schools.name}}</option>\n          </select>           \n        </div>\n        <div class=\"col-md-6\">\n          <label for=\"inputField\" class=\"d-flex\">User Name</label>\n          <input class=\"form-control\" id=\"inputField\" [placeholder]=\"isAddModel?'Enter User name':''\" matInput\n            formControlName=\"username\">\n        </div>\n        <div class=\"col-md-6\">\n          <label for=\"inputField\" class=\"d-flex\">Email Address</label>\n          <input type=\"email\" class=\"form-control\" id=\"inputField\" [placeholder]=\"isAddModel?'Enter Email Address':''\" matInput\n            formControlName=\"email\">\n        </div>\n        <div class=\"col-md-6\">\n          <label for=\"inputField\" class=\"d-flex\">Password</label>\n          <input type=\"password\" class=\"form-control\" id=\"inputField\" [placeholder]=\"isAddModel?'Enter Password':''\" minlength=\"8\" required pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\" \n            matInput formControlName=\"password\">\n        </div>\n        <div class=\"col-md-6\">\n          <label for=\"inputField\" class=\"d-flex\">Confirm Password</label>\n          <input type=\"password\" class=\"form-control\" id=\"inputField\" [placeholder]=\"isAddModel?'Retype Password':''\"\n            matInput formControlName=\"confirm_password\" required>\n        </div>\n      </div>\n    </form>\n    <div class=\"mt-10\">\n      <div class=\"float-end\">\n        <button type=\"button\" class=\"btn btn-1d mr5\" (click)=\"confirmEvent()\">{{isAddModel?'Create':'Update'}}</button>\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"this.modalRef.hide()\">Cancel</button>\n      </div>\n    </div>\n  </div>\n</ng-template>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}